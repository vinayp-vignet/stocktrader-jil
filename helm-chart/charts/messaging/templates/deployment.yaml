#       Copyright 2017 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-{{ .Chart.Name }}-selector"
        version: {{ .Values.image.tag }}
    spec:
      containers:
      - name: "{{ .Chart.Name }}"
        image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: MQ_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.mq.secret_name }}
                key: id
          - name: MQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.mq.secret_name }}
                key: pwd
          - name: MQ_HOST
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.mq.secret_name }}
                key: host
          - name: MQ_PORT
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.mq.secret_name }}
                key: port
          - name: MQ_CHANNEL
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.mq.secret_name }}
                key: channel
          - name: MQ_QUEUE_MANAGER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.mq.secret_name }}
                key: queue-manager
          - name: MQ_QUEUE
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.mq.secret_name }}
                key: queue
          - name: JWT_AUDIENCE
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.jwt.secret_name }}
                key: audience
          - name: JWT_ISSUER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.jwt.secret_name }}
                key: issuer
        ports:
        - name: http
          containerPort: {{ .Values.image.containerPort.http }}
        - name: https
          containerPort: {{ .Values.image.containerPort.https }}
        resources:
          requests:
            cpu: "{{ .Values.image.resources.requests.cpu }}"
            memory: "{{ .Values.image.resources.requests.memory }}"
